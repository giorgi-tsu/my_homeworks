# დავალება 13

# შემსრულებელი: გიორგი ცუცქირიძე

# ეს დავალება მოგვცეს მეცამეტე ლექციაზე, რომელიც ჩატარდა 
# 2024-01-15-ში და დავალების ჩაბარების ბოლო ვადაა 2024-01-22.

#******************************************************************#

print("\n",
      "-------------------- სავარჯიშო 1 --------------------", "\n")

## სავარჯიშო 1

# დაწერე ფუნქცია, რომელიც მომხმარებელს ტექსტურ ფაილში ინფორმაციას
# ჩააწერინებს Input ფუნქციის დახმარებით, მანამ სანამ მომხმარებელი 
# არ შეიყვანს სიტყვას _ “enough”.

# საჭირო ბიბლიოთეკების შემოტანა

import os

os.chdir(r".\Homeworks\HW_13_2024-01-15")

print(os.getcwd())

# ფუნქციის გამოცხადება

def text_to_file():
    
    while True:
        input_str = input("Enter Information (Enter \"Enoguh\" if "
          "you want to stop entering information): "
           )
        if input_str.lower() == "enough":
            break
        else:
           with open("client_generated_info.txt", "a") as file:
               file.write(input_str + "\n")

# ფუნქციის გამოძახება

text_to_file()

# შევამოწმოთ ჩაწერა თუ არა ყველაფერი ფაილში.

with open("Client_generated_info.txt", "r") as file:
   print(file.read())


#------------------------------------------------------------------#

print("\n",
      "-------------------- სავარჯიშო 2 --------------------", "\n")

## სავარჯიშო 2
   
# დაწერე ფუნქცია, რომელიც input ფუნქციის დახმარებით
# მომხმარებლისგან მიიღებს საქაღალდის ლოკაციას და შესაქმნელი 
# ფაილის სახელს, შემდეგ მიღებულ ლოკაციაზე შექმნის შესაბამის ფაილს
# და ამოპრინტავს საქაღალდეში არსებულ ყველა ფაილის სიას.

# ფუნქციის გამოცხადება

def main_func():
    folder_path = input("Enter folder path: ")
    file_name = input("Enter file name with extension "
                      "(e.g. textfile.txt): ")
    try:
        with open(f"{folder_path}\{file_name}", "x") as file:
            pass
    except FileExistsError:
        print("File already exists!")
    
    print(os.listdir(folder_path))


# ფუნქციის გამოძახება

main_func()


#------------------------------------------------------------------#

print("\n",
      "-------------------- სავარჯიშო 3 --------------------", "\n")

## სავარჯიშო 3

# ეს სავარჯიშო დავალების ფაილში არ ყოფილა, მხოლოდ 
# პრეზენტაციაში იყო.

# შექმენი ფუნქცია, რომელიც input_ით შეყვანილ ტექსტს დაშიფრავს 
# მორზეს ანბანით და ისე შეინახავს ფაილში (მორზეს ანბანით დაშიფვრა
# მოცემული იყო მე-6 დავალები არასავალდებულო სავარჯიშოდ).

# მორზეს ანბანის ფუნქციის გამოცხადება

def word_to_morse_code(word):
    
    morse_dict = {
        'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.',
        'F': '..-.', 'G': '--.', 'H': '....', 'I': '..', 'J': '.---',
        'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---',
        'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-',
        'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
        'Y': '-.--', 'Z': '--..', '0': '-----', '1': '.----',
        '2': '..---', '3': '...--', '4': '....-', '5': '.....',
        '6': '-....', '7': '--...', '8': '---..', '9': '----.',
        '.': '.-.-.-', ',': '--..--','?': '..--..', "'": '.----.',
        '!': '-.-.--', '/': '-..-.', '(': '-.--.', ')': '-.--.-',
        '&': '.-...',':': '---...', ';': '-.-.-.', '=': '-...-',
        '+': '.-.-.', '-': '-....-', '_': '..--.-', '"': '.-..-.',
        '$': '...-..-', '@': '.--.-.', ' ': '/'
    }

    morse_word = ""
    for char in word.upper():
        if char in morse_dict:
            morse_word += morse_dict[char] + " "
        else:
            return f"{char} is not in my morse dictionary, Sorry!"
    return morse_word.rstrip()


input_text = input("Enter text to morse-encode: ")

input_text_morse = word_to_morse_code(input_text)

with open("morse.txt", "a") as file:
    file.write(input_text_morse + "\n")

# შევამოწმოთ რა ჩაიწერა ფაილში
    
with open("morse.txt", "r") as file:
    print(file.read())


#------------------------------------------------------------------#