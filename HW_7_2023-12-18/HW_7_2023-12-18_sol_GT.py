# დავალება 7

# შემსრულებელი: გიორგი ცუცქირიძე

# ეს დავალება მოგვცეს მეშვიდე ლექციაზე, რომელიც ჩატარდა 20231218-ში
# და დავალების ჩაბარების ბოლო ვადაა 20231225.

#******************************************************************#

## სავარჯიშო 1

# რეკურსიის დახმარებით შექმენი ფუნქცია, რომელიც იმდენჯერ დაბეჭდავს 
# მისალმებას, რა რიცხვსაც გადასცემ არგუმენტად. 
# (ციკლის გამოყენება არ შეიძლება)


## ფუნქციის გამოცხადება

def mult_greet(n, counter=1):
    if counter > n:
        return
    
    print("Hello!")
    mult_greet(n, counter + 1)


# ფუნქციის გამოძახება

mult_greet(0)  # არაფერს არ დაბეჭდავს
mult_greet(3)  # დაბეჭდავს მისალმებას სამჯერ
 
#------------------------------------------------------------------#

## სავარჯიშო 2

# შექმენი ფუნქცია, რომელიც მიიღებს შეკვეთას, ანუ კერძის სახელს და 
# რაოდენობას და დაბეჭდავს მას, თუმცა რაოდენობას თუ არ მივუთითებთ,
# შეცდომას არ ამოაგდებს და 1_ად ჩათვლის.


## ფუნქციის გამოცხადება

def print_order(dish_name, dish_quantity=1):
    print(f"Order: I'd like {dish_quantity} {dish_name}(s)")


## ფუნქციის გამოძახება

print_order("coffee")  # ეს დაბეჭდავს ნაგულისხმევ რაოდენობას: 
                       # "Order: I'd like 1 coffee(s)"
print_order("coffee", 4)  # ეს დაბეჭდავს შეკვეთის რაოდენობასაც:
                          # "Order: I'd like 4 coffee(s)"

#------------------------------------------------------------------#

## სავარჯიშო 3

# შექმენი ფუნქცია, რომელიც მიიღებს მინიმუმ 3 რიცხვს და დააბრუნებს
# და დაბეჭდავს ნარმავლს.


# ფუნქციის გამოცხადება

def prod(x1, x2, x3, *args):
    product = x1*x2*x3
    for x in args:
        product *= x

    print(f"Product = {product}")
    return product


# ფუნქციის გამოძახება

prod(1, 3, 4)  # დაბეჭდავს "Product = 12"

prod(1, 3, 4, 2, 5)  # დაბეჭდავს "Product = 120"

prod(1,2)  # ამოაგდებს შეცდომას, ვინაიდან ფუნქცია მოითხოვს 
           # სულ მცირე 3 არგუმენტს

#------------------------------------------------------------------#